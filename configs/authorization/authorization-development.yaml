server:
  port: ${common.authorization.port}
  session:
      cookie:
        name: OAUTH2SESSION
spring:
  datasource:
    host: localhost
    url: jdbc:postgresql://${spring.datasource.host}:5432/auth
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  cloud:
    kubernetes:
      discovery:
        enabled: false
security:
  oauth2:
    gym-home:
      access-token-uri: ${common.authorization.accessTokenUri}
      scope: read
      client-id: authentication
      client-secret: 125a607e-f6ff-4352-ba37-641f081ec904
      id: accounts
oauth2:
  clients:
    - clientId: authentication
      clientSecret: "{noop}125a607e-f6ff-4352-ba37-641f081ec904"
      scope: read
      resourceIds: accounts
      authorizedGrantTypes: client_credentials
      refreshTokenValiditySeconds: 21600
      accessTokenValiditySeconds: 3600
    - clientId: gym-home
      clientSecret: "{noop}0564f7a2-05df-4cf9-bb85-bd4058283553"
      scope: read,write
      resourceIds: accounts
      authorizedGrantTypes: authorization_code,password,refresh_token
      accessTokenValiditySeconds: 3600
      autoApproveScopes: .*
logging:
  level:
    root: info
